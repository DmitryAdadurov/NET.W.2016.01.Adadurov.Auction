@using UI.Mvc.Infrastructure.Pager
@model UI.Mvc.Models.SearchResult<UI.Mvc.Models.LotModel>

@{
    ViewBag.Title = "Search results";
    string NoResults = ViewData["NoResults"]?.ToString();
    int? CatId = (int?)ViewData["CatId"];
}

<div id="search-results">
    @if (string.IsNullOrEmpty(NoResults))
    {
        foreach (var item in Model.SearchResults)
        {
            Html.RenderPartial("Partial/SearchResultPartial", item);
        }
    }
    else
    {
        <div class="row">
            <div class="col-md-6 col-md-offset-3">
                <h1>@NoResults</h1>
            </div>
        </div>
    }
</div>

@if (string.IsNullOrEmpty(NoResults))
{
    <div class="row">
        <div class="col-md-4 col-md-offset-4">
            @if (!CatId.HasValue)
            {
                Html.Pagination(Model.PageCount, Model.CurrentPage, t => Url.Action("Find", "Search", new { page = t }));
            }
            else
            {
                Html.Pagination(Model.PageCount, Model.CurrentPage, t => Url.Action("Find", "Search", new { page = t, catId = CatId.Value }));
            }
        </div>
    </div>
}

@section scripts{
    
}